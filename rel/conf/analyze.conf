nodename = {{ app }}@127.0.0.1
distributed_cookie = {{ app }}secretcookie

##--------------------------------------------------
## Node
##--------------------------------------------------

## SMP support. Enum: auto, enable, disable
node.smp = auto

## vm.args: -heart
## Heartbeat monitoring of an Erlang runtime system
## Value should be 'on' or comment the line
## node.heartbeat = on

## Enable kernel poll. Flag: on, off
node.kernel_poll = on

## Async thread pool
node.async_threads = 32

## Erlang process limit
node.process_limit = 256000

## Crash dump
node.crash_dump = {{ crash_dump }}

## Tweak GC to run more often
node.fullsweep_after = 1000

##--------------------------------------------------
## Log
##--------------------------------------------------

## Set the log dir
log.dir = {{ platform_log_dir }}

## Console log. Enum: off, file, console, both
log.console = console

## Console log level. 
## Enum：debug, info, notice, warning, error, critical, alert, emergency, none
log.console.level = info

## Syslog. Enum: on, off
log.syslog = on

## Syslog level.
## Enum: debug, info, notice, warning, error, critical, alert, emergency
log.syslog.level = error

## Console log file
## log.console.file = {{ platform_log_dir }}/console.log

## Error log file
log.error.file = {{ platform_log_dir }}/error.log

## Enable the crash log. Enum: on, off
log.crash = on

log.crash.file = {{ platform_log_dir }}/crash.log


##---------------------------------------------------
## Listeners
##---------------------------------------------------

## TCP Listener

## Report data listener

## TCP listener: 8000, 127.0.0.1:8000, ::1:8000 
listener.tcp.report_data = 8000

## Size of acceptor pool
listener.tcp.report_data.nbAcceptors = 16

## TransOpts

## Max connections
listener.tcp.report_data.transOpts.max_connections = 1024

## Listen Backlog
listener.tcp.report_data.transOpts.backlog = 1024

## Nodelay. Enum: on, off
listener.tcp.report_data.transOpts.nodelay = on

## Send timeout XX seconds.
listener.tcp.report_data.transOpts.send_timeout = 30

## Send timeout close socket. Enum: on, off
listener.tcp.report_data.transOpts.send_timeout_close = on


## Master control listener

## TCP listener: 8001, 127.0.0.1:8001, ::1:8001 
listener.tcp.master_control = 8001

## Size of acceptor pool
listener.tcp.master_control.nbAcceptors = 16

## TransOpts

## Max connections
listener.tcp.master_control.transOpts.max_connections = 200

## Listen Backlog
listener.tcp.master_control.transOpts.backlog = 256

## Nodelay. Enum: on, off
listener.tcp.master_control.transOpts.nodelay = on

## Send timeout XX seconds.
listener.tcp.master_control.transOpts.send_timeout = 30

## Send timeout close socket. Enum: on, off
listener.tcp.master_control.transOpts.send_timeout_close = on


## RPC listener

## TCP listener: 8002, 127.0.0.1:8002, ::1:8002 
listener.tcp.rpc = 8002

## Size of acceptor pool
listener.tcp.rpc.nbAcceptors = 16

## TransOpts

## Max connections
listener.tcp.rpc.transOpts.max_connections = 200

## Listen Backlog
listener.tcp.rpc.transOpts.backlog = 256

## Nodelay. Enum: on, off
listener.tcp.rpc.transOpts.nodelay = on

## Send timeout XX seconds.
listener.tcp.rpc.transOpts.send_timeout = 30

## Send timeout close socket. Enum: on, off
listener.tcp.rpc.transOpts.send_timeout_close = on


## HTTP Listener

## HTTP listener: 8003, 127.0.0.1:8003, ::1:8003
listener.http.client_request = 8003

## Size of acceptor pool
listener.http.client_request.nbAcceptors = 16

## TransOpts

## Max connections
listener.http.client_request.transOpts.max_connections = 2000

## Listen Backlog
listener.http.client_request.transOpts.backlog = 256

## Nodelay. Enum: on, off
listener.http.client_request.transOpts.nodelay = on

## Send timeout XX seconds.
listener.http.client_request.transOpts.send_timeout = 30

## Send timeout close socket. Enum: on, off
listener.http.client_request.transOpts.send_timeout_close = on


## ProtoOpts

## Request timeout(seconds)
listener.http.client_request.protoOpts.request_timeout = 30

## Max keepalive
listener.http.client_request.protoOpts.max_keepalive = 2000


## Connect conf

## Push service conf (推送服务配置) 

# Enable. Enum: on, off
push_service.enable = on

# Connect ip:port
push_service.connect = 127.0.0.1:8010

## Patch hour data (补抄小时数据)

# Enable. Enum: on, off
patch_hour_data.enable = on

## Hour data push conf (小时数据推送配置) 

# Enable. Enum: on, off
hour_data_push.enable = on

# Connect ip:port
hour_data_push.connect = 10.168.1.212:7067


## XML data push conf (XML数据推送配置) 

# Enable. Enum: on, off
xml_data_push.enable = on

# Connect ip:port
xml_data_push.connect = 10.168.1.156:1516


## Connector client request conf

## Request timeout XX seconds
connector_client_request.timeout = 500

## Request task priority. -20 =< Priority =< 20
connector_client_request.task_priority = -20

## Request url
connector_client_request.url = http://127.0.0.1:7654












